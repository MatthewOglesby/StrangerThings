{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19314\\\\Desktop\\\\Course Work\\\\Week 12\\\\Stranger Things\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Route, BrowserRouter, Routes, useNavigate } from 'react-router-dom';\nimport { getPosts } from './api';\nimport './style.css';\nimport { Navbar, Posts, Profile, Home, Register } from './components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [token, setToken] = useState('');\n  const navigate = useNavigate();\n  console.log(token); // can log the token of login if interested in seeing it\n\n  async function fetchPosts() {\n    const results = await getPosts();\n    setPosts(results.data.posts);\n  }\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbarLinks\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts\",\n        element: /*#__PURE__*/_jsxDEV(Posts, {\n          posts: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {\n          setToken: setToken,\n          token: token,\n          history: history\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"/PRpNpElmboZmXP6Pdn1g5nn/xo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nconst container = document.querySelector('#container');\nconst root = ReactDOM.createRoot(container);\nroot.render( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 5\n}, this));\n/*\r\n\r\nLogin\r\n(LocalStorage)\r\n    - setItem\r\n        - sets kkey/value pair items\r\n        - window.localStorage.setItem('token', <token>)\r\n    - getItem\r\n        - gets value based on item name\r\n        - window.localStorage.getItem('token')\r\n    - removeitem\r\n        - removes key/value pair in localStorage\r\n        - window.localStorage.removeItem('token')\r\nRegistration\r\nPosts\r\nProfile\r\nNavbar\r\nAddPost\r\n\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","Route","BrowserRouter","Routes","useNavigate","getPosts","Navbar","Posts","Profile","Home","Register","App","posts","setPosts","token","setToken","navigate","console","log","fetchPosts","results","data","history","container","document","querySelector","root","createRoot","render"],"sources":["C:/Users/19314/Desktop/Course Work/Week 12/Stranger Things/src/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { Route, BrowserRouter, Routes, useNavigate} from 'react-router-dom';\r\nimport { getPosts } from './api';\r\nimport './style.css'\r\n\r\nimport {\r\n    Navbar,\r\n    Posts,\r\n    Profile,\r\n    Home,\r\n    Register\r\n} from './components'\r\n\r\nconst App = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [token, setToken] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    console.log(token) \r\n    // can log the token of login if interested in seeing it\r\n\r\n    async function fetchPosts() {\r\n        const results = await getPosts()\r\n        setPosts(results.data.posts);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPosts()\r\n    }, []) \r\n\r\n    return (\r\n        <div className='navbarLinks'>\r\n            <Navbar />\r\n            <Routes>\r\n                <Route path='/' element={<Home />} />\r\n                <Route path='/posts' element={<Posts posts={posts}/>} />\r\n                <Route path='/profile' element={<Profile />} />\r\n                <Route path='/register' element={<Register setToken={setToken} token={token} history={history}/>} />\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst container = document.querySelector('#container');\r\nconst root = ReactDOM.createRoot(container);\r\nroot.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n);\r\n\r\n\r\n/*\r\n\r\nLogin\r\n(LocalStorage)\r\n    - setItem\r\n        - sets kkey/value pair items\r\n        - window.localStorage.setItem('token', <token>)\r\n    - getItem\r\n        - gets value based on item name\r\n        - window.localStorage.getItem('token')\r\n    - removeitem\r\n        - removes key/value pair in localStorage\r\n        - window.localStorage.removeItem('token')\r\nRegistration\r\nPosts\r\nProfile\r\nNavbar\r\nAddPost\r\n\r\n*/"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,KAAT,EAAgBC,aAAhB,EAA+BC,MAA/B,EAAuCC,WAAvC,QAAyD,kBAAzD;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,aAAP;AAEA,SACIC,MADJ,EAEIC,KAFJ,EAGIC,OAHJ,EAIIC,IAJJ,EAKIC,QALJ,QAMO,cANP;;;AAQA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EACd,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAMkB,QAAQ,GAAGZ,WAAW,EAA5B;EAEAa,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EALc,CAMd;;EAEA,eAAeK,UAAf,GAA4B;IACxB,MAAMC,OAAO,GAAG,MAAMf,QAAQ,EAA9B;IACAQ,QAAQ,CAACO,OAAO,CAACC,IAAR,CAAaT,KAAd,CAAR;EACH;;EAEDb,SAAS,CAAC,MAAM;IACZoB,UAAU;EACb,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACI;IAAK,SAAS,EAAC,aAAf;IAAA,wBACI,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,MAAD;MAAA,wBACI,QAAC,KAAD;QAAO,IAAI,EAAC,GAAZ;QAAgB,OAAO,eAAE,QAAC,IAAD;UAAA;UAAA;UAAA;QAAA;MAAzB;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,KAAD;QAAO,IAAI,EAAC,QAAZ;QAAqB,OAAO,eAAE,QAAC,KAAD;UAAO,KAAK,EAAEP;QAAd;UAAA;UAAA;UAAA;QAAA;MAA9B;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI,QAAC,KAAD;QAAO,IAAI,EAAC,UAAZ;QAAuB,OAAO,eAAE,QAAC,OAAD;UAAA;UAAA;UAAA;QAAA;MAAhC;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII,QAAC,KAAD;QAAO,IAAI,EAAC,WAAZ;QAAwB,OAAO,eAAE,QAAC,QAAD;UAAU,QAAQ,EAAEG,QAApB;UAA8B,KAAK,EAAED,KAArC;UAA4C,OAAO,EAAEQ;QAArD;UAAA;UAAA;UAAA;QAAA;MAAjC;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CA5BD;;GAAMX,G;UAGeP,W;;;KAHfO,G;AA8BN,MAAMY,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAlB;AACA,MAAMC,IAAI,GAAG1B,QAAQ,CAAC2B,UAAT,CAAoBJ,SAApB,CAAb;AACAG,IAAI,CAACE,MAAL,eACI,QAAC,aAAD;EAAA,uBACI,QAAC,GAAD;IAAA;IAAA;IAAA;EAAA;AADJ;EAAA;EAAA;EAAA;AAAA,QADJ;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}