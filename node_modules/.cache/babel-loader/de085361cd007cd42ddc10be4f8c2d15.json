{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19314\\\\Desktop\\\\Course Work\\\\Week 12\\\\Stranger Things\\\\src\\\\components\\\\SinglePostView.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n// import React, { useState } from 'react';\n// import { Navigate, useParams } from 'react-router-dom';\n// import { createMessage } from '../api';\n// const SendMessage = ({ postID, token, navigate }) => {\n//     const [message, setMessage] = useState({content: ''});\n// // three things to make this request \n//     // post id, token, message object containing content of message\n// async function addMessage() {\n//     await createMessage({postID, message, token});\n// }\n//     return (\n//         <form \n//             id='messageForm'\n//             className='messageForm'\n//             onSubmit={(event) => {\n//             event.preventDefault();\n//             addMessage();\n//             console.log(event.target.value)\n//         }}>\n//             <input \n//             className='messageInput'\n//             type='text'\n//             placeholder='Enter Message'\n//             onChange={(event) => setMessage({content: event.target.value})}\n//             />\n//             <button type='submit' className='messageSubmit' onClick={() => {navigate('/profile')}}>Send</button>\n//         </form>\n//     )\n// }\n// const SinglePostView = ({ posts, token, getMe, navigate }) => {\n//     const [activateMessage, setActivateMessage] = useState(false);\n//     const { postID } = useParams();\n// if (posts.length) {\n//         const [currentPost] = posts.filter(post => post._id === postID);\n//         const { title, description, location, price, willDeliver } = currentPost;\n//         return (\n//             <div className='singlePostViewBody'>\n//                 <div className='singlePostView' >\n//                     <div className='postContainer1'>\n//                         <h3 className='SPVTitle'>{title}</h3>\n//                         <p className='SPVContent'>Description: </p><p className='postingInfo1'>{description}</p>\n//                         <p className='SPVContent'>Price: </p><p className='postingInfo1'>{price}</p>\n//                         <p className='SPVContent'>Location: </p><p className='postingInfo1'>{location}</p>\n//                     </div>\n//                 </div>\n//                 <div className='buttonContainer1'>\n//                     <button id='contactSeller' onClick={() => {setActivateMessage(!activateMessage); contactSeller.style.display = 'none'}}>Message Seller</button>\n//                     {\n//                         activateMessage && <SendMessage postID={postID} token={token} getMe={getMe} navigate={navigate} />\n//                     }\n//                 </div>\n//             </div>\n//         )\n// } else {\n//     return (\n//         <h1>Waiting for post...</h1>\n//     )\n// }\n// }\n// export default SinglePostView;\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { createMessage } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SendMessage = _ref => {\n  _s();\n\n  let {\n    postID,\n    token\n  } = _ref;\n  const [message, setMessage] = useState({\n    content: ''\n  }); // we need 3 things to make this request\n  // Post-id, token, message object containing the content of the message\n\n  async function addMessage() {\n    await createMessage({\n      postID,\n      message,\n      token\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: ev => {\n      ev.preventDefault();\n      addMessage();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Message\",\n      onChange: ev => setMessage({\n        content: ev.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SendMessage, \"zHW6lT0cCxeljI9xD7SfiFFsqis=\");\n\n_c = SendMessage;\n\nconst SinglePostView = _ref2 => {\n  _s2();\n\n  let {\n    posts,\n    token\n  } = _ref2;\n  const [activateMessage, setActivateMessage] = useState(false);\n  const {\n    postID\n  } = useParams();\n  const [currentPost] = posts.filter(post => post._id === postID);\n  const {\n    title,\n    description,\n    location,\n    price,\n    willDeliver\n  } = currentPost;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: \", price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Location: \", location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Will Deliver: \", willDeliver]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setActivateMessage(!activateMessage),\n      children: \"Message this user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), activateMessage && /*#__PURE__*/_jsxDEV(SendMessage, {\n      postID: postID,\n      token: token\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SinglePostView, \"SaCcpfA+IAwaFepjA28zt0MOekY=\", false, function () {\n  return [useParams];\n});\n\n_c2 = SinglePostView;\nexport default SinglePostView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SendMessage\");\n$RefreshReg$(_c2, \"SinglePostView\");","map":{"version":3,"names":["React","useState","useParams","createMessage","SendMessage","postID","token","message","setMessage","content","addMessage","ev","preventDefault","target","value","SinglePostView","posts","activateMessage","setActivateMessage","currentPost","filter","post","_id","title","description","location","price","willDeliver"],"sources":["C:/Users/19314/Desktop/Course Work/Week 12/Stranger Things/src/components/SinglePostView.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { Navigate, useParams } from 'react-router-dom';\r\n// import { createMessage } from '../api';\r\n\r\n\r\n\r\n// const SendMessage = ({ postID, token, navigate }) => {\r\n//     const [message, setMessage] = useState({content: ''});\r\n    \r\n\r\n// // three things to make this request \r\n//     // post id, token, message object containing content of message\r\n// async function addMessage() {\r\n//     await createMessage({postID, message, token});\r\n// }\r\n\r\n//     return (\r\n//         <form \r\n//             id='messageForm'\r\n//             className='messageForm'\r\n//             onSubmit={(event) => {\r\n//             event.preventDefault();\r\n//             addMessage();\r\n//             console.log(event.target.value)\r\n//         }}>\r\n//             <input \r\n//             className='messageInput'\r\n//             type='text'\r\n//             placeholder='Enter Message'\r\n//             onChange={(event) => setMessage({content: event.target.value})}\r\n//             />\r\n//             <button type='submit' className='messageSubmit' onClick={() => {navigate('/profile')}}>Send</button>\r\n//         </form>\r\n//     )\r\n// }\r\n\r\n// const SinglePostView = ({ posts, token, getMe, navigate }) => {\r\n//     const [activateMessage, setActivateMessage] = useState(false);\r\n\r\n//     const { postID } = useParams();\r\n\r\n// if (posts.length) {\r\n//         const [currentPost] = posts.filter(post => post._id === postID);\r\n//         const { title, description, location, price, willDeliver } = currentPost;\r\n\r\n//         return (\r\n//             <div className='singlePostViewBody'>\r\n//                 <div className='singlePostView' >\r\n//                     <div className='postContainer1'>\r\n//                         <h3 className='SPVTitle'>{title}</h3>\r\n//                         <p className='SPVContent'>Description: </p><p className='postingInfo1'>{description}</p>\r\n//                         <p className='SPVContent'>Price: </p><p className='postingInfo1'>{price}</p>\r\n//                         <p className='SPVContent'>Location: </p><p className='postingInfo1'>{location}</p>\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className='buttonContainer1'>\r\n//                     <button id='contactSeller' onClick={() => {setActivateMessage(!activateMessage); contactSeller.style.display = 'none'}}>Message Seller</button>\r\n//                     {\r\n//                         activateMessage && <SendMessage postID={postID} token={token} getMe={getMe} navigate={navigate} />\r\n//                     }\r\n//                 </div>\r\n//             </div>\r\n//         )\r\n\r\n// } else {\r\n//     return (\r\n//         <h1>Waiting for post...</h1>\r\n//     )\r\n// }\r\n\r\n// }\r\n\r\n// export default SinglePostView;\r\n\r\nimport React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { createMessage } from '../api';\r\n\r\nconst SendMessage = ({ postID, token }) => {\r\n  const [message, setMessage] = useState({content: ''});\r\n  // we need 3 things to make this request\r\n    // Post-id, token, message object containing the content of the message\r\n    \r\n  async function addMessage() {\r\n    await createMessage({postID, message, token})\r\n  }\r\n  \r\n  return (\r\n    <form onSubmit={ (ev)=> {\r\n      ev.preventDefault();\r\n      addMessage();\r\n    }}>\r\n      <input\r\n        type='text'\r\n        placeholder='Enter Message'\r\n        onChange={ (ev) => setMessage({content: ev.target.value}) }\r\n      />\r\n      <button type='submit'>Send Message</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst SinglePostView = ({ posts, token }) => {\r\n  const [activateMessage, setActivateMessage] = useState(false);\r\n  \r\n  const { postID } = useParams();\r\n  \r\n  const [currentPost] = posts.filter(post => post._id === postID);\r\n  \r\n  const {title, description, location, price, willDeliver} = currentPost;\r\n  \r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>{title}</h3>\r\n        <p>Description: {description}</p>\r\n        <p>Price: {price}</p>\r\n        <p>Location: {location}</p>\r\n        <p>Will Deliver: {willDeliver}</p>\r\n      </div>\r\n      <button onClick={() => setActivateMessage(!activateMessage)}>Message this user</button>\r\n      {\r\n        activateMessage && <SendMessage postID={postID} token={token}/>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SinglePostView;"],"mappings":";;;;AAAA;AACA;AACA;AAIA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,aAAT,QAA8B,QAA9B;;;AAEA,MAAMC,WAAW,GAAG,QAAuB;EAAA;;EAAA,IAAtB;IAAEC,MAAF;IAAUC;EAAV,CAAsB;EACzC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC;IAACQ,OAAO,EAAE;EAAV,CAAD,CAAtC,CADyC,CAEzC;EACE;;EAEF,eAAeC,UAAf,GAA4B;IAC1B,MAAMP,aAAa,CAAC;MAACE,MAAD;MAASE,OAAT;MAAkBD;IAAlB,CAAD,CAAnB;EACD;;EAED,oBACE;IAAM,QAAQ,EAAIK,EAAD,IAAO;MACtBA,EAAE,CAACC,cAAH;MACAF,UAAU;IACX,CAHD;IAAA,wBAIE;MACE,IAAI,EAAC,MADP;MAEE,WAAW,EAAC,eAFd;MAGE,QAAQ,EAAIC,EAAD,IAAQH,UAAU,CAAC;QAACC,OAAO,EAAEE,EAAE,CAACE,MAAH,CAAUC;MAApB,CAAD;IAH/B;MAAA;MAAA;MAAA;IAAA,QAJF,eASE;MAAQ,IAAI,EAAC,QAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAtBD;;GAAMV,W;;KAAAA,W;;AAwBN,MAAMW,cAAc,GAAG,SAAsB;EAAA;;EAAA,IAArB;IAAEC,KAAF;IAASV;EAAT,CAAqB;EAC3C,MAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCjB,QAAQ,CAAC,KAAD,CAAtD;EAEA,MAAM;IAAEI;EAAF,IAAaH,SAAS,EAA5B;EAEA,MAAM,CAACiB,WAAD,IAAgBH,KAAK,CAACI,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAajB,MAAlC,CAAtB;EAEA,MAAM;IAACkB,KAAD;IAAQC,WAAR;IAAqBC,QAArB;IAA+BC,KAA/B;IAAsCC;EAAtC,IAAqDR,WAA3D;EAEA,oBACE;IAAA,wBACE;MAAA,wBACE;QAAA,UAAKI;MAAL;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,4BAAiBC,WAAjB;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA,sBAAWE,KAAX;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAA,yBAAcD,QAAd;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE;QAAA,6BAAkBE,WAAlB;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MAAQ,OAAO,EAAE,MAAMT,kBAAkB,CAAC,CAACD,eAAF,CAAzC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARF,EAUIA,eAAe,iBAAI,QAAC,WAAD;MAAa,MAAM,EAAEZ,MAArB;MAA6B,KAAK,EAAEC;IAApC;MAAA;MAAA;MAAA;IAAA,QAVvB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CAxBD;;IAAMS,c;UAGeb,S;;;MAHfa,c;AA0BN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}